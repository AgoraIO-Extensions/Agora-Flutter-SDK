name: Integration test with iris artifacts

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [labeled, synchronize]
    branches: 
      - main
      - release/**
      - special/**
      - dev/**

jobs:
  flutter_codestyle_check:
    name: Flutter codestyle/analyze check
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check scores
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL < 120 ))
          then
            echo Pub Score too low.
            exit 1
          fi 

  integration_test_android:
    name: Run Flutter Android Integration Tests
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - name: Checkout hoe
        uses: actions/checkout@v3
        with:
          repository: littleGnAl/hoe
          ref: littlegnal/update
          path: hoe
      - name: Download iris artifacts
        run: |
          source scripts/artifacts_version.sh

          PROJECT_DIR=$(pwd)

          mkdir -p output
          cd hoe
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example \
            --setup-local-dev \
            --project-dir=${PROJECT_DIR} \
            --artifacts-output-dir=${PROJECT_DIR}/output \
            --platforms=android,macos \
            --apple-package-name=io.agora.agoraRtcEngineExample \
            --flutter-package-name=agora_rtc_engine \
            --iris-android-cdn-url=${IRIS_CDN_URL_ANDROID} \
            --iris-macos-cdn-url=${IRIS_CDN_URL_MACOS}
      - run: flutter config --enable-macos-desktop 
      - name: run flutter android integration tests
        uses: reactivecircus/android-emulator-runner@v2.21.0
        with:
          api-level: 31
          arch: x86_64
          profile: Nexus 6
          ram-size: 2048M
          heap-size: 4096M
          disk-size: 8192M
          script: bash ci/run_flutter_integration_test_android.sh 0

  integration_test_ios:
    name: Run Flutter iOS Integration Tests
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 13 Pro Max'
      - name: Checkout hoe
        uses: actions/checkout@v3
        with:
          repository: littleGnAl/hoe
          ref: littlegnal/update
          path: hoe
      - name: Download iris artifacts
        run: |
          source scripts/artifacts_version.sh

          PROJECT_DIR=$(pwd)

          mkdir -p output
          cd hoe
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example \
            --setup-local-dev \
            --project-dir=${PROJECT_DIR} \
            --artifacts-output-dir=${PROJECT_DIR}/output \
            --platforms=ios \
            --apple-package-name=io.agora.agoraRtcEngineExample \
            --flutter-package-name=agora_rtc_engine \
            --iris-ios-cdn-url=${IRIS_CDN_URL_IOS}
      - run: bash ci/run_flutter_integration_test_ios.sh 0

  integration_test_macos:
    name: Run Flutter macOS Integration Tests
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - name: Checkout hoe
        uses: actions/checkout@v3
        with:
          repository: littleGnAl/hoe
          ref: littlegnal/update
          path: hoe
      - name: Download iris artifacts
        run: |
          source scripts/artifacts_version.sh

          PROJECT_DIR=$(pwd)

          echo "project dir: ${PROJECT_DIR}"

          ls ${PROJECT_DIR}

          mkdir -p output
          cd hoe
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example \
            --setup-local-dev \
            --project-dir=${PROJECT_DIR} \
            --artifacts-output-dir=${PROJECT_DIR}/output \
            --platforms=macos \
            --apple-package-name=io.agora.agoraRtcEngineExample \
            --flutter-package-name=agora_rtc_engine \
            --iris-macos-cdn-url=${IRIS_CDN_URL_MACOS}
      - run: flutter config --enable-macos-desktop 
      - run: bash ci/run_flutter_macos_integration_test.sh 0

  integration_test_windows:
    name: Run Flutter Windows Integration Tests
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: windows-2019
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - name: Checkout hoe
        uses: actions/checkout@v3
        with:
          repository: littleGnAl/hoe
          ref: littlegnal/update
          path: hoe
      - name: Download iris artifacts
        shell: bash
        run: |
          source scripts/artifacts_version.sh

          PROJECT_DIR=$(pwd)

          mkdir -p output
          cd hoe
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example \
            --setup-local-dev \
            --project-dir=${PROJECT_DIR} \
            --artifacts-output-dir=${PROJECT_DIR}/output \
            --platforms=windows \
            --apple-package-name=io.agora.agoraRtcEngineExample \
            --flutter-package-name=agora_rtc_engine \
            --iris-windows-cdn-url=${IRIS_CDN_URL_WINDOWS}
      - run: flutter config --enable-windows-desktop
      - name: Run windows integration test
        shell: bash
        run: |
          bash ci/run_flutter_windows_integration_test.sh 0