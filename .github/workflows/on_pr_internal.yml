name: 'on: pr internal'

on:
  pull_request:

jobs:
  check_permission:
    name: Check permission
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') || contains(github.event.pull_request.labels.*.name, 'ci:build_example') }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
        has_permission: ${{ steps.check_permission_by_secret.outputs.has_permission }}
    steps:
      - name: Check for Secret availability
        id: check_permission_by_secret
        # perform secret check & put boolean result as an output
        shell: bash
        run: |
          APP_ID="${{ secrets.APP_ID }}"
          if [ ! -z "${APP_ID}" ]; then
            echo "has_permission=1" >> $GITHUB_OUTPUT;
            echo "secrets.APP_ID is not empty, PR opened by the internal contributors"
          else
            echo "has_permission=-1" >> $GITHUB_OUTPUT;
            echo "secrets.APP_ID is empty, PR opened by the external contributors"
          fi

  build_example:
    name: Build example
    needs: check_permission
    if: ${{ needs.check_permission.outputs.has_permission == 1 && contains(github.event.pull_request.labels.*.name, 'ci:build_example') }}
    uses: ./.github/workflows/run_build_example.yml
    with:
      target_branch: ${{ github.event.pull_request.head.ref }}
      issue_number: ${{ github.event.pull_request.number }}
    secrets:
      APP_ID: ${{ secrets.APP_ID }}
      BUILD_PROVISION_PROFILE_UUID: ${{ secrets.BUILD_PROVISION_PROFILE_UUID }}
      BUILD_PROVISION_PROFILE_NAME: ${{ secrets.BUILD_PROVISION_PROFILE_NAME }}
      BUILD_PROVISION_PROFILE_TEAMID: ${{ secrets.BUILD_PROVISION_PROFILE_TEAMID }}
      BUILD_PROVISION_PROFILE_IDENTITY: ${{ secrets.BUILD_PROVISION_PROFILE_IDENTITY }}
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}


  run_test:
    name: Run test
    needs: check_permission
    # If the PR requested by a external contributor, the secrets.APP_ID should be empty, and skip this workflow
    if: ${{ needs.check_permission.outputs.has_permission == 1 && !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    uses: ./.github/workflows/run_test.yml
    secrets:
      APP_ID: ${{ secrets.APP_ID }}
            