name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: 
      - main
      - release/**
      - special/**
      - dev/**
      
jobs:
  flutter_codestyle_check:
    name: Flutter codestyle/analyze check
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check scores
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL < 120 ))
          then
            echo Pub Score too low.
            exit 1
          fi 

  integration_test_ios:
    name: Run Flutter iOS Integration Tests
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 13 Pro Max'
      - run: bash ci/run_flutter_integration_test_ios.sh

  integration_test_macos:
    name: Run Flutter macOS Integration Tests
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter config --enable-macos-desktop 
      - run: bash ci/run_flutter_macos_integration_test.sh

  integration_test_windows:
    name: Run Flutter Windows Integration Tests
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: windows-2019
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter config --enable-windows-desktop
      - name: Run windows integration test
        shell: bash
        run: |
          bash ci/run_flutter_windows_integration_test.sh

  build_android_windows:
    name: Build Android on Windows
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_ios:
    name: Build iOS
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'integration_test:iris_artifacts') && 
          ((contains(github.event_name, 'pull_request_target') && contains(github.event.pull_request.labels.*.name, 'external:contribution')) || 
           contains(github.event_name, 'pull_request')) }}
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-12
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build ios --no-codesign
        run: flutter build ios --no-codesign
        working-directory: example 
