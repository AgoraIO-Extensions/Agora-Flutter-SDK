name: CI

on:
  pull_request_target:
    types: [opened, synchronize]
    branches: 
      - main
    
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
      - release/**

jobs:
  flutter_codestyle_check:
    name: Flutter codestyle/analyze check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check scores
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL < 120 ))
          then
            echo Pub Score too low.
            exit 1
          fi 

  integration_test_android:
    name: Run Flutter Android Integration Tests
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter config --enable-macos-desktop 
      - name: run flutter android integration tests
        uses: reactivecircus/android-emulator-runner@v2.21.0
        with:
          api-level: 31
          arch: x86_64
          profile: Nexus 6
          script: bash ci/run_flutter_integration_test_android.sh

  integration_test_ios:
    name: Run Flutter iOS Integration Tests
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 13 Pro Max'
      - run: bash ci/run_flutter_integration_test_ios.sh

  integration_test_macos:
    name: Run Flutter macOS Integration Tests
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter config --enable-macos-desktop 
      - run: bash ci/run_flutter_macos_integration_test.sh

  integration_test_windows:
    name: Run Flutter Windows Integration Tests
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: windows-2019
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.MY_APP_ID }}
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter config --enable-windows-desktop
      - run: bash ci/run_flutter_windows_integration_test.sh

  # unittest_android:
  #   name: Run Android Unit Test
  #   needs: flutter_codestyle_check
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '11'
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: '2.10.5'
  #     - run: flutter pub get
  #     - run: bash ci/run_android_test.sh

  # unittest_ios:
  #   name: Run iOS Unit Test
  #   needs: flutter_codestyle_check
  #   runs-on: macos-11
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: '2.10.5'
  #     - run: flutter pub get
  #     - run: bash ci/run_ios_test.sh
  
  build_android_windows:
    name: Build Android on Windows
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_android_ubuntu:
    name: Build Android on Ubuntu
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_ios:
    name: Build iOS
    needs: flutter_codestyle_check
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0']
    runs-on: macos-11
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build ios --no-codesign
        run: flutter build ios --no-codesign
        working-directory: example
