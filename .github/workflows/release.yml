name: Release to Github release/pub.dev and tag üöÄ

on:
  pull_request:
    types:
      - closed

jobs:
  release_if_merged:
    if: ${{ github.event.pull_request.merged == true && 
            github.event.pull_request.base.ref == 'main' && 
            contains(github.event.pull_request.labels.*.name, 'ci:prepare_release') }}
    outputs:
      release_version: ${{steps.release.outputs.version}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install release-it
        run: |
          npm install -g release-it
          npm install -g release-it/bumper
          npm install -g release-it/conventional-changelog
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Release
        id: release
        run: |
          PUBSPEC_VERSION=$(grep 'version: ' pubspec.yaml | sed -e 's,.*: \(.*\),\1,')
          echo "pubspec version: ${PUBSPEC_VERSION}"

          release-it ${PUBSPEC_VERSION} \
            --no-git.commit \
            --'git.commitMessage="chore: release ${version}"' \
            --git.tag \
            --'git.tagName="${version}"' \
            --'git.tagAnnotation="Release ${version}"' \
            --git.push \
            --github.release \
            --no-github.web \
            --ci
          echo "::set-output name=version::${PUBSPEC_VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Dart Package üö¢
        id: publish
        uses: k-paxian/dart-package-publisher@master
        with:
          accessToken: ${{ secrets.OAUTH_ACCESS_TOKEN }}
          refreshToken: ${{ secrets.OAUTH_REFRESH_TOKEN }}
          force: true # We have checked the `dart pub publish --dry-run` `in build.yaml`, it's ok to force publish here.
          skipTests: true
  attach_docs:
    name: Attach dartdoc
    runs-on: ubuntu-latest
    needs: release_if_merged
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Build DartDoc üìñ
        run: |
          dart pub get
          # Generate DartDoc
          dart doc
          # Create a zip file of the DartDoc output
          zip -r agora_rtc_engine_docs.zip doc
      - name: Upload DartDoc Artifact ‚¨ÜÔ∏è
        uses: actions/upload-artifact@v3
        with:
          name: agora_rtc_engine_docs.zip
          path: agora_rtc_engine_docs.zip
      - name: Upload DartDoc Archive to GitHub release ‚¨ÜÔ∏è
        uses: svenstaro/upload-release-action@2.6.0
        with:
          file: agora_rtc_engine_docs.zip
          asset_name: agora_rtc_engine_docs.zip
          tag: ${{ needs.release_if_merged.outputs.release_version }}
